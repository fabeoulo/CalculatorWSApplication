package com.advantech.model.db1;
// Generated 2017/11/13 下午 01:41:36 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.CreationTimestamp;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * CountermeasureEvent generated by hbm2java
 */
@Entity
@Table(name = "CountermeasureEvent")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class CountermeasureEvent implements java.io.Serializable {

    private int id;
    private Countermeasure countermeasure;
    private User user;
    private String event;
    private Date lastUpdateTime;

    public CountermeasureEvent() {
    }

    public CountermeasureEvent(Countermeasure countermeasure, User user, String event) {
        this.countermeasure = countermeasure;
        this.user = user;
        this.event = event;
    }

    @Id
    @GeneratedValue
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cm_id")
    public Countermeasure getCountermeasure() {
        return this.countermeasure;
    }

    public void setCountermeasure(Countermeasure countermeasure) {
        this.countermeasure = countermeasure;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "[user_id]")
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Column(name = "event", nullable = false, length = 30)
    public String getEvent() {
        return this.event;
    }

    public void setEvent(String event) {
        this.event = event;
    }

    @CreationTimestamp
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
    @JsonFormat(pattern = "yyyy-MM-dd'T'kk:mm:ss.SSS'Z'", timezone = "GMT+8")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "eventTime", length = 23, updatable = false)
    public Date getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    public void setLastUpdateTime(Date lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
    }

}
